#!/usr/bin/env python
"""
    %prog run is2n
"""
from __future__ import print_function
import nsim
from nsim import files
import fitsio

from argparse import ArgumentParser

parser=ArgumentParser(__doc__)
parser.add_argument('run',help='run identifier')
parser.add_argument('is2n',help='is2n number', type=int)


def main():
    args=parser.parse_args()

    c = files.read_config(args.run)
    c['simc'] = files.read_config( c['sim'] )

    npair_min=c.get('npair_min',None)

    outfile=files.get_psample_summed_url(args.run, args.is2n)
    print("will write to :",outfile)

    npair, nsplit = files.get_npair_nsplit(c, args.is2n, npair_min=npair_min)

    first=True
    for isplit in xrange(nsplit):

        infile=files.get_psample_summed_url(args.run, args.is2n, itrial=isplit)
        print("%d/%d: %s" % (isplit+1,nsplit,infile))

        with fitsio.FITS(infile) as fits:

            tsgrid = fits['shear_grid'].read()
            tlnp   = fits['lnp'].read()

            if first:
                sgrid=tsgrid
                lnp=tlnp
            else:
                lnp += tlnp
    
    lnp -= lnp.max()

    print("writing to :",outfile)
    with fitsio.FITS(outfile,'rw',clobber=True) as fits:
        fits.write(sgrid, extname="shear_grid")
        fits.write(lnp, extname="lnp")

main()
