#!/usr/bin/env python
"""
    %prog run is2n

"""

import sys
import nsim
import fitsio
from optparse import OptionParser

import esutil as eu

import nsim

parser=OptionParser(__doc__)

parser.add_option('--allow-missing',action='store_true',
                  help="allow missing splits")

def combine_trials(run, is2n, allow_missing=True):
    fs=nsim.files.get_default_fs()
    c = nsim.files.read_config(run)

    npair,nsplit = nsim.files.get_npair_nsplit(c, is2n)
    ntot=npair*2

    outfile=nsim.files.get_output_url(run, 0, is2n, fs=fs, ext='fits')
    print 'writing to:',outfile

    with fitsio.FITS(outfile,mode="rw",clobber=True) as output:

        for isplit in xrange(nsplit):
            f=nsim.files.get_output_url(run, 0, is2n, itrial=isplit, fs=fs)
            if allow_missing and not os.path.exists(f):
                continue
            print f
            t=eu.io.read(f)


            if t.size != ntot:
                raise ValueError("expected %d, got %d" % (npair,t.size))

            if 'processed' not in t.dtype.names:
                t=eu.numpy_util.add_fields(t, [('processed','i2')])
                t['processed']=1

            if isplit == 0:
                output.write(t)
            else:
                output[-1].append(t)

    
    print 'wrote:',outfile

def main():
    options,args = parser.parse_args(sys.argv[1:])

    if len(args) < 2:
        parser.print_help()
        sys.exit(1)

    run=args[0]
    is2n=int(args[1])

    combine_trials(run, is2n, allow_missing=options.allow_missing)


main()
