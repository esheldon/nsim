#!/usr/bin/env python
from __future__ import print_function
try:
    xrange
except:
    xrange=range

import os
import sys
import nsim
import fitsio
from argparse import ArgumentParser

#import esutil as eu

import nsim

parser=ArgumentParser()

parser.add_argument(
    'run',
    help='run to combine',
)
parser.add_argument(
    '--local',
    action='store_true',
    help="just store locally",
)

def get_tmp_file(fname):
    tmpdir=os.environ['TMPDIR']
    bname=os.path.basename(fname)
    return os.path.join(tmpdir, bname) 

def combine_trials(args):

    c = nsim.files.read_config(args.run)
    c['simc'] = nsim.files.read_config(c['sim'])

    ngal_per,nsplit,hrs = nsim.files.get_gal_nsplit(c)

    outfile=nsim.files.get_output_url(args.run, ext='fits')
    tmpfile=get_tmp_file(outfile)
    print('writing to temp file:',tmpfile)

    nmissing=0
    with fitsio.FITS(tmpfile,mode="rw",clobber=True) as output:

        first=True
        for isplit in xrange(nsplit):
            f=nsim.files.get_output_url(args.run, itrial=isplit)
            if not os.path.exists(f):
                print("   missing file:",f)
                nmissing += 1
                continue

            print(f)

            try:
                t=fitsio.read(f)
            except IOError as err:
                print("caught IOError: %s" % str(err))
                continue

            if t.size != ngal_per:
                raise ValueError("%s expected %d, got %d" % (f,ngal_per,t.size))

            if first:
                output.write(t)
                first=False
            else:
                output[-1].append(t)

    print(nmissing,"were missing")

    if not args.local:
        print('moving to:',outfile)
        exit_code=os.system('mv -fv %s %s' % (tmpfile, outfile))
        if exit_code != 0:
            raise RuntimeError("error moving to final location")

def main():
    args = parser.parse_args()
    combine_trials(args)

main()
