#!/usr/bin/env python
from __future__ import print_function
import sys
import os
import numpy
from numpy import log10, where, arange
import biggles

import fitsio
import ngmix
import nsim
from nsim import files

import galsim

import argparse

fclass=argparse.ArgumentDefaultsHelpFormatter
parser=argparse.ArgumentParser(formatter_class=fclass)

parser.add_argument('gal_run', help='gal run to use')
parser.add_argument('star_run', help='star run to use')
parser.add_argument('epsfile', help='eps file to write')
parser.add_argument('--frac', type=float, default=0.1, help='fraction to plot')

#nplot=4000000
nplot=10000
nbin=100

def read_run(run, frac):

    url=files.get_output_url(run, 0, 0)
    print("reading from:",url)
    with fitsio.FITS(url) as fits:
        nrows=fits[1].get_nrows()
        n = int(nrows*frac)
        data = fits[1]['mcal_R'][0:n]

    return data[:,0,0]

def main():

    biggles.configure('default','fontsize_min',2.0)

    args = parser.parse_args()

    gal_R=read_run(args.gal_run, args.frac)
    star_R=read_run(args.star_run, args.frac)

    R11 = numpy.zeros(gal_R.size + star_R.size)
    R11[0:gal_R.size] = gal_R
    R11[gal_R.size:]  = star_R

    Rmin=-1.5
    Rmax= 2.0
    nbin=100
    hobj,edges,hist = biggles.make_histc(
        R11,
        min=Rmin,
        max=Rmax,
        nbin=nbin,
        smooth=True,
        get_hdata=True,
        label='All',
    )
    gobj,gedges,ghist=biggles.make_histc(
        R11[0:gal_R.size],
        min=Rmin,
        max=Rmax,
        nbin=nbin,
        smooth=True,
        color='blue',
        type='dotdashed',
        label='Galaxies',
        get_hdata=True,
    )

    sobj,sedges,ghist=biggles.make_histc(
        R11[gal_R.size:],
        min=Rmin,
        max=Rmax,
        nbin=nbin,
        smooth=True,
        color='red',
        type='dashed',
        width=2,
        label='Stars',
        get_hdata=True,
    )

    key=biggles.PlotKey(0.1,0.9,[hobj,gobj,sobj],
                        halign='left')

    plt=biggles.FramedPlot()
    plt.xlabel=r'$R_{1,1}$'
    plt.y1.draw_ticklabels=False
    plt.yrange=[0, 1.1*hist.max()]
    #plt.aspect_ratio=1.0/1.618
    plt.aspect_ratio=0.9

    plt.add(hobj,gobj,sobj, key)

    print("writing:",args.epsfile)
    plt.write_eps(args.epsfile)

main()
