#!/usr/bin/env python
"""
    %prog run npairs output_file

for some sims npair might just be ngal
"""

from __future__ import print_function
import sys
import logging

import nsim

from argparse import ArgumentParser
parser=ArgumentParser(__doc__)

parser.add_argument('run',help="run")
parser.add_argument('ngal',type=int,help="number to simulate")
parser.add_argument('output_file',help="output file to write")
parser.add_argument('--seed',type=int,help="seed to use")

parser.add_argument('--write-local',action='store_true',
                  help="write to CWD first")

parser.add_argument('--make-plots',action='store_true',
                  help="make some plots of the trials")

parser.add_argument("--profile", action='store_true',
                  help=("Profile the code using cProfile"))

parser.add_argument("--loglevel", default='info',
                  help=("logging level"))

def main():
    args=parser.parse_args()

    nsim.util.setup_logging(args.loglevel)
    logger=logging.getLogger(__name__)

    logger.info('reading config files')
    run_conf = nsim.files.read_config(args.run)
    sim_conf = nsim.files.read_config(run_conf['sim'])
    sim_conf['make_plots'] = args.make_plots

    if args.profile:
        logger.info('profiling sim with cProfile')
        nsim.run.profile_sim(
            args.seed,
            sim_conf,
            run_conf,
            args.ngal,
            args.output_file,
        )
    else:
        logger.info('running sim')
        nsim.run.go(
            args.seed,
            sim_conf,
            run_conf,
            args.ngal,
            args.output_file,
            make_plots=args.make_plots,
            write_local=args.write_local,
        )

main()
