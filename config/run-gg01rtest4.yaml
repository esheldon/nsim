run: "run-gg01rtest4"
sim: "sim-gg01"

#fitter: "isample"
fitter: "isample-iter"
fit_model: "gauss"

g_prior_during: false

#proposal_type: "truth"

#proposal_type: "mcmc"
#guess_type: "draw_truth"
#guess_type: "draw_priors"

proposal_type: "maxlike"
guess_type: "truth_random"

# starting number, may increase
n_samples: 50000
n_samples_max: 2000000

#n_samples_max: 150000
#n_samples_max: 100000

# effective number after weighting should be this many
#min_eff_n_samples: 5000
min_eff_n_samples: 200

expand_shear_true: true

# we normalize splits by split for is2n==0
desired_err: 2.5e-05

#nsplit0: 20000
#s2n_vals: [ 10 ]
nsplit0: 50000
#nsplit0: 10000
#s2n_vals: [ 100 ]
s2n_vals: [ 15 ]

# doubled for slow machines

#sec_per_pair: 120.0
#sec_per_pair: 26.0
# slower for lower s/n
sec_per_pair: 20.0


# in case we are using it
nwalkers: 80
burnin: 400
nstep: 200
mca_a: 3.0

# for if we start from maxlike
lm_pars:
    maxfev: 300
    ftol:   1.0e-6
    xtol:   1.0e-6
    epsfcn: 1.0e-6


